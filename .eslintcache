[{"C:\\test\\task\\src\\index.js":"1","C:\\test\\task\\src\\Redux\\Reducer\\reducers.js":"2","C:\\test\\task\\src\\App.jsx":"3","C:\\test\\task\\src\\Redux\\Reducer\\rootReducer.js":"4","C:\\test\\task\\src\\Redux\\Actions\\actions.js":"5","C:\\test\\task\\src\\Redux\\Actions\\actionType.js":"6"},{"size":516,"mtime":1610709450793,"results":"7","hashOfConfig":"8"},{"size":135,"mtime":1610709455600,"results":"9","hashOfConfig":"8"},{"size":7306,"mtime":1610869329393,"results":"10","hashOfConfig":"8"},{"size":1477,"mtime":1610868100629,"results":"11","hashOfConfig":"8"},{"size":1152,"mtime":1610867949137,"results":"12","hashOfConfig":"8"},{"size":290,"mtime":1610867354448,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1v3qmsk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\test\\task\\src\\index.js",[],["28","29"],"C:\\test\\task\\src\\Redux\\Reducer\\reducers.js",[],"C:\\test\\task\\src\\App.jsx",["30","31"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { building, height, material, sizeX, sizeY, steps, getTotal, getData } from './Redux/Actions/actions'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nconst StepOne = () => {\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.rootReducer)\n\n  return (\n    <>\n      <div className=\"card-body\">\n        <span className='text-muted'>Шаг 1</span>\n        <h5 className=\"card-title\">Что будем строить?</h5>\n        <input\n          type=\"radio\"\n          value='1'\n          className=\"btn-check\"\n          name=\"btnradio\" id='House'\n          autoComplete=\"off\"\n          onChange={e => dispatch(building(e.target.value))} />\n        <label\n          className=\"card-text text-success font-weight-bold\"\n          htmlFor=\"House\">Жилой Дом</label>\n        <br />\n        <input\n          type=\"radio\"\n          value='2'\n          className=\"btn-check\"\n          name=\"btnradio\" id=\"Garage\"\n          autoComplete=\"off\"\n          onChange={e => dispatch(building(e.target.value))} />\n        <label\n          className=\"card-text text-success font-weight-bold\"\n          htmlFor=\"Garage\">Гараж</label>\n      </div>\n      <div className=\"card-footer text-muted\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-warning\"\n          onClick={() => dispatch(steps(1))}>Отмена</button>\n        {state.building && <button\n          type=\"button\"\n          className=\"btn btn-outline-info ml-5\"\n          onClick={() => dispatch(steps(2))}>Далее</button>\n        }\n      </div>\n    </>\n  )\n}\n\n const StepTwo = () => {\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.rootReducer)\n\n  return (\n    <>\n      <div className=\"card-body\">\n        <span\n          className='text-muted'>Шаг 2</span>\n        <h5\n          className=\"card-title\">Колличество этажей (число):</h5>\n        <input\n          type=\"number\"\n          value={state.height}\n          onChange={e => dispatch(height(e.target.value))} />\n      </div>\n      <div className=\"card-footer text-muted\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-warning\"\n          onClick={() => dispatch(steps(1))}>Отмена</button>\n        {state.height &&\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-info ml-5\"\n            onClick={() => dispatch(steps(3))}>Далее</button>}\n      </div>\n        </>\n  )\n}\n\n const StepThree = () => {\n\n  const state = useSelector(state => state.rootReducer)\n  const dispatch = useDispatch()\n\n\n  return (\n    <>\n      <div className=\"card-body\">\n        {state.building === '1' ? (\n          <span className='text-muted'>Шаг 3</span>\n        ) : (\n          <span className='text-muted'>Шаг 2</span>\n        )}\n        <h5 className=\"card-title\">Материал Стен:</h5>\n        <input\n          type=\"radio\"\n          value='1'\n          className=\"btn-check\"\n          name=\"btnradio\"\n          id='1'\n          autoComplete=\"off\"\n          onChange={e => dispatch(material(e.target.value))} />\n        <label\n          className=\"card-text text-success font-weight-bold\"\n          htmlFor=\"1\">\n          Кирпич\n            </label>\n        <br />\n        <input\n          type=\"radio\"\n          value='2'\n          className=\"btn-check\"\n          name=\"btnradio\"\n          id=\"2\"\n          autoComplete=\"off\"\n          onChange={e => dispatch(material(e.target.value))} />\n        <label\n          className=\"card-text text-success font-weight-bold\"\n          htmlFor=\"2\">Шлакоблок</label>\n        <br />\n        <input\n          type=\"radio\"\n          value='3'\n          className=\"btn-check\"\n          name=\"btnradio\"\n          id=\"3\" autoComplete=\"off\"\n          onChange={e => dispatch(material(e.target.value))} />\n        <label className=\"card-text text-success font-weight-bold\" htmlFor=\"3\">Деревянный брус</label>\n      </div>\n      <div className=\"card-footer text-muted\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-warning\"\n          onClick={() => dispatch(steps(1))}>Отмена</button>\n        {state.material &&\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-info ml-5\"\n            onClick={() => dispatch(steps(4))}>Далее</button>}\n      </div>\n    </>\n  )\n}\n\n const StepFour = () => {\n\n  const state = useSelector(state => state.rootReducer)\n  const dispatch = useDispatch()\n\n  const buildingRequest = (step) => {\n    dispatch(step)\n    totalResponse()\n  }\n\n  const totalResponse = () => {\n    dispatch(\n      getTotal()\n    )\n  }\n\n  return (\n    <>\n      <div className=\"card-body\">\n        {state.building === '2' ? (\n          <span className='text-muted'>Шаг 3</span>\n        ) : (\n            <span className='text-muted'>Шаг 4</span>\n          )}\n        <h5 className=\"card-title\">Длинна стен (в метрах):</h5>\n        <input\n          type=\"number\"\n          value={state.sizeX}\n          onChange={e => dispatch(sizeX(e.target.value))} />\n        <span>X</span>\n        <input\n          type=\"number\"\n          value={state.sizeY}\n          onChange={e => dispatch(sizeY(e.target.value))} />\n      </div>\n      <div className=\"card-footer text-muted\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-warning\"\n          onClick={() => dispatch(steps(1))}>Отмена</button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info ml-5\"\n          onClick={() => buildingRequest(steps(5))}\n        >Далее</button>\n      </div>\n    </>\n  )\n}\n\n const StepFive = () => {\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.rootReducer)\n\n  return (\n    <>\n      <div className=\"card-body\">\n        <span className='text-muted'>Результат расчета</span>\n        <div className=\"card-title\">{state?.total?.result === 'ok' ? (\n          <>\n            <h1>Успешно</h1>\n            <p>{state?.total?.message}</p>\n          </>\n        ) :\n          <>\n            <h1>Ошибка</h1>\n            <p className='text-danger'>{state?.total?.message}</p>\n          </>\n        }\n        </div>\n      </div>\n      <div className=\"card-footer text-muted\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-warning\"\n          onClick={() => dispatch(steps(1))}>Новый расчет</button>\n      </div>\n    </>\n  )\n}\n\nexport const App = () => {\n\n  const state = useSelector(state => state.rootReducer)\n\n  const renderItems = () => {\n    switch (state.step) {\n      case 1:\n         return <StepOne />\n      case 2:\n          return <>\n            {state.building === '2' ? (\n              <StepThree />\n            ) : <StepTwo />}\n          </>\n      case 3:\n        return <StepThree />\n      case 4:\n        return <StepFour />\n      case 5:\n        return <StepFive />\n      default:\n        break;\n    }\n  }\n\n  return <>\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        Калькулятор цены конструкций\n     </div>\n      {renderItems()}\n    </div>\n  </>\n}\n","C:\\test\\task\\src\\Redux\\Reducer\\rootReducer.js",[],"C:\\test\\task\\src\\Redux\\Actions\\actions.js",[],"C:\\test\\task\\src\\Redux\\Actions\\actionType.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":25},{"ruleId":"36","severity":1,"message":"40","line":3,"column":69,"nodeType":"38","messageId":"39","endLine":3,"endColumn":76},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getData' is defined but never used.","no-global-assign","no-unsafe-negation"]