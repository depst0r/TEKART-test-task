[{"C:\\test\\task\\src\\index.js":"1","C:\\test\\task\\src\\Redux\\Reducer\\reducers.js":"2","C:\\test\\task\\src\\App.jsx":"3","C:\\test\\task\\src\\Redux\\Reducer\\rootReducer.js":"4","C:\\test\\task\\src\\Redux\\Actions\\actions.js":"5","C:\\test\\task\\src\\Redux\\Actions\\actionType.js":"6"},{"size":516,"mtime":1610696058762,"results":"7","hashOfConfig":"8"},{"size":135,"mtime":1610696058744,"results":"9","hashOfConfig":"8"},{"size":4672,"mtime":1610696058583,"results":"10","hashOfConfig":"8"},{"size":1534,"mtime":1610696058759,"results":"11","hashOfConfig":"8"},{"size":665,"mtime":1610696058741,"results":"12","hashOfConfig":"8"},{"size":262,"mtime":1610696058739,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1v3qmsk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\test\\task\\src\\index.js",[],["28","29"],"C:\\test\\task\\src\\Redux\\Reducer\\reducers.js",[],"C:\\test\\task\\src\\App.jsx",["30"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { building, height, material } from './Redux/Actions/actions'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nexport const App = () => {\n\n  const [step, setStep] = useState(4)\n  const [checkedValue, setCeckedValue] = useState(String)\n  const [heightValue, setHeightValue] = useState(String)\n  const [materialValues, setMaterialValues] = useState(String)\n  const [sizeValue_X, setSizeValue_X] = useState(String)\n  const [sizeValue_Y, setSizeValue_Y] = useState(String)\n\n  const dispatch = useDispatch()\n\nconst renderItems = () => {\n  switch (step) {\n    case 1:\n        return (\n      <>\n      <div className=\"card-body\">\n      <span className='text-muted'>{`Шаг ${step}`}</span>\n      <h5 className=\"card-title\">Что будем строить?</h5>\n      <input type=\"radio\" value='1' className=\"btn-check\" name=\"btnradio\" id='House' autoComplete=\"off\" onChange={e => setCeckedValue(e.target.value)} />\n      <label className=\"card-text text-success font-weight-bold\" htmlFor=\"House\">Жилой Дом</label>\n      <br />\n      <input type=\"radio\" value='2' className=\"btn-check\" name=\"btnradio\" id=\"Garage\" autoComplete=\"off\" onChange={e => setCeckedValue(e.target.value)} />\n      <label className=\"card-text text-success font-weight-bold\" htmlFor=\"Garage\">Гараж</label>\n    </div>\n    <div className=\"card-footer text-muted\">\n      <button type=\"button\" className=\"btn btn-outline-warning\" onClick={() => setStep(1)}>Отмена</button>\n      <button type=\"button\" className=\"btn btn-outline-info ml-5\" onClick={() => dispatch(building(checkedValue))}>Далее</button>\n    </div>\n  </>\n  )\n  case 2:\n    return (\n        <>\n        <div className=\"card-body\">\n        <span className='text-muted'>{`Шаг ${step}`}</span>\n        <h5 className=\"card-title\">Колличество этажей (число):</h5>\n          <input type=\"number\" value={heightValue} onChange={e => setHeightValue(e.target.value)}/>\n      </div>\n      <div className=\"card-footer text-muted\">\n        <button type=\"button\" className=\"btn btn-outline-warning\" onClick={() => setStep(1)}>Отмена</button>\n        <button type=\"button\" className=\"btn btn-outline-info ml-5\" onClick={() => dispatch(height(heightValue))}>Далее</button>\n      </div>\n    </>\n    )\n  case 3:\n    return (\n      <>\n      <div className=\"card-body\">\n      <span className='text-muted'>{`Шаг ${step}`}</span>\n      <h5 className=\"card-title\">Материал Стен:</h5>\n      <input type=\"radio\" value='1' className=\"btn-check\" name=\"btnradio\" id='1' autoComplete=\"off\" onChange={e => setMaterialValues(e.target.value)} />\n      <label className=\"card-text text-success font-weight-bold\" htmlFor=\"1\">Кирпич</label>\n      <br />\n      <input type=\"radio\" value='2' className=\"btn-check\" name=\"btnradio\" id=\"2\" autoComplete=\"off\" onChange={e => setMaterialValues(e.target.value)} />\n      <label className=\"card-text text-success font-weight-bold\" htmlFor=\"2\">Шлакоблок</label>\n      <br/>\n      <input type=\"radio\" value='3' className=\"btn-check\" name=\"btnradio\" id=\"3\" autoComplete=\"off\" onChange={e => setMaterialValues(e.target.value)} />\n      <label className=\"card-text text-success font-weight-bold\" htmlFor=\"3\">Деревянный брус</label>\n    </div>\n    <div className=\"card-footer text-muted\">\n      <button type=\"button\" className=\"btn btn-outline-warning\" onClick={() => setStep(1)}>Отмена</button>\n      <button type=\"button\" className=\"btn btn-outline-info ml-5\" onClick={() => dispatch(material(materialValues))}>Далее</button>\n    </div>\n  </>\n    )\n  case 4:\n    return (\n      <>\n      <div className=\"card-body\">\n      <span className='text-muted'>{`Шаг ${step}`}</span>\n      <h5 className=\"card-title\">Длинна стен (в метрах):</h5>\n        <input type=\"number\" value={sizeValue_X} onChange={e => setSizeValue_X(e.target.value)}/>\n        <span>X</span>\n        <input type=\"number\" value={sizeValue_Y} onChange={e => setSizeValue_Y(e.target.value)}/>\n    </div>\n    <div className=\"card-footer text-muted\">\n      <button type=\"button\" className=\"btn btn-outline-warning\" onClick={() => setStep(1)}>Отмена</button>\n      <button type=\"button\" className=\"btn btn-outline-info ml-5\" onClick={() => dispatch(height(heightValue))}>Далее</button>\n    </div>\n  </>\n    )\n    default:\n      break;\n  }\n}\n\n  return <>\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        Калькулятор цены конструкций\n     </div>\n      {renderItems()}\n    </div>\n  </>\n}","C:\\test\\task\\src\\Redux\\Reducer\\rootReducer.js",[],"C:\\test\\task\\src\\Redux\\Actions\\actions.js",[],"C:\\test\\task\\src\\Redux\\Actions\\actionType.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":23,"nodeType":"37","messageId":"38","endLine":2,"endColumn":34},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]